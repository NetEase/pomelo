var MailBox = require('../lib/mailbox');
var should = require('should');
var dnode = require('dnode');

describe('mailbox', function() {
	var server, port = 3333;
	var opts = {
		id: 'test-servere-id', 
		host: 'localhost', 
		port: port
	};
	var msg = {
		method: 'echo', 
		args: ['hello']
	};
	
	before(function(done) {
		//start remote server
		var remote = {
			echo: function(msg, cb) {
				cb(null, msg);
			}	
		};
		server = new dnode(remote);
		server.listen(port);
		done();
	}); 
	
	after(function(done) {
		//stop remote server
		server.end();
		server.close();
		done();
	});
	
	//server config
	var opts = {
		id: "test-server-id", 
		host: "localhost", 
		port: port
	};
	
	describe('#createMailBox', function() {
		it('should connect the remote server when create mail box', function(done) {
			MailBox.createMailBox(opts, function(err, mailbox) {
				should.exist(mailbox);
				mailbox.close();
				done();
			});
		}); 
		
		it('should return an error if connect fail', function(done) {
			var opts = {
					id: "test-server-id", 
					host: "localhost", 
					port: 1234	//invalid port
			};
			
			MailBox.createMailBox(opts, function(err, mailbox) {
				should.exist(err);
				done();
			});
		});
	});
	
	describe('#send', function() {
		it('should send request to remote server and get the response from callback function', function(done) {
			MailBox.createMailBox(opts, function(err, mailbox) {
				should.exist(mailbox);
				mailbox.send(msg, null, function(err, res) {
					should.exist(res);
					res.should.equal(msg.args[0]);
					mailbox.close();
					done();
				});
			});
		});
	});
	
	describe('#close', function() {
		it('should emit a close event when mailbox close', function(done) {
			var closeEventCount = 0;
			MailBox.createMailBox(opts, function(err, mailbox) {
				should.exist(mailbox);
				mailbox.on('close', function() {
					closeEventCount++;
				});
				mailbox.close();
			});
			
			setTimeout(function() {
				closeEventCount.should.equal(1);
				done();
			}, 500);
		});
		
		it('should return an error when try to send message by a closed mailbox', function(done) {
			var closeEventCount = 0;
			MailBox.createMailBox(opts, function(err, mailbox) {
				should.exist(mailbox);
				mailbox.close();
				mailbox.send(msg, null, function(err, res) {
					should.exist(err);
					done();
				});
			});
		});
	});
	
});