var exec = require('child_process').exec;
var util=require('../utils/util');

var processMonitor=module.exports;


/**
 * get the process data by command 'ps auxw |grep 'node'|grep -v 'grep'|grep -v 'cd''
 */
function getPsInfo(callback){
	var info={};
	exec("ps auxw |grep 'node'|grep -v 'grep'|grep -v 'cd'",function(error,output){
		if(error!==null){
			console.error('exec error:'+error);
		}else{
			var timestamp=new Date();
//			console.error('process data is :'+output_array);
   			var timestamp=new Date();
			var time=util.formatTime(timestamp);
		    format(output,time,callback);	
		    // console.error('process inf :'+info);
		}
		// callback(info);
	});
}

function format(data,timestamp,cb,interval){
	var outData=data.toString();
	var outArray=outData.replace(/^\s+|\s+$/g,"").split(/\s+/);
//	console.error(outArray);
	if(typeof(interval)=='undefined'){
		interval=0;
	}
	var counter=0;
	var outValueArray=[];
	var outdata=[];
	for(var i=0;i<outArray.length;i++){
		if((!isNaN(outArray[i])||(outArray[i].indexOf('server')!=-1))){
			outValueArray[counter]=outArray[i];
			counter++;
		}
	}
//	console.log(outValueArray);
	for(var j=0;j<outValueArray.length;j++){
		if(isNaN(outValueArray[j])){
			var ps={};
			ps.time=timestamp;
			var serverId=ps.serverId=outValueArray[j];
			
			ps.serverType=serverId.split('-')[0];
			ps.pid=outValueArray[j-5];
			
			ps.cpuAvg=outValueArray[j-4];
			ps.memAvg=outValueArray[j-3];
			ps.vsz=outValueArray[j-2];
			ps.rss=outValueArray[j-1];
			
			outdata.push(ps);
		}
	}
//	console.log(outdata);
	cb(outdata);
}
getPsInfo(function (msg){
   console.error(msg);
});
module.exports.getPsInfo=getPsInfo;












